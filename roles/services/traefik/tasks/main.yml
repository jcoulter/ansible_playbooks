---
- name: Create a proxy network
  docker_network:
    name: proxy

- name: Ensure Traefik config directory exists
  file:
    path: "{{ config_root }}/traefik_config"
    state: directory
    mode: "0755"

- name: Ensure Traefik dynamic config directory exists
  file:
    path: "{{ traefik_dynamic_config_dir }}"
    state: directory
    mode: "0755"

- name: Copy config.yml while substituting vars
  template:
    src:  ../templates/config.yml
    dest: "{{ config_root }}/traefik_config/config.yml"

- name: Copy traefik.yml while substituting vars
  template:
    src:  ../templates/traefik.yml
    dest: "{{ config_root }}/traefik_config/traefik.yml"
    

# #  This didn't work for me, see volume comment below.
# - name: make sure acme is 600
#   ansible.builtin.file:
#     path: "{{ config_root }}/traefik_config/acme.json"
#     state: touch
#     owner: "{{ puid }}"
#     group: "{{ pgid }}"
#     mode: '0600'

- name: "Make sure the traefik container is created and running"
  docker_container:
    image: "traefik:latest"
    name: "traefik"
    security_opts:
      - "no-new-privileges:true"
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.entrypoints: "http"
      traefik.http.routers.traefik.rule: "Host(`traefik.{{ domain }}`)"
      # traefik.http.middlewares.traefik-ipwhitelist.ipwhitelist.sourcerange: "192.168.1.1/24"
      # traefik.http.middlewares.traefik-auth.basicauth.users: "{{ traefik_password }}"
      traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme: "https"
      traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto: "https"
      traefik.http.routers.traefik.middlewares: "traefik-https-redirect"
      traefik.http.routers.traefik-secure.entrypoints: "https"
      traefik.http.routers.traefik-secure.rule: "Host(`traefik.{{ domain }}`)"
      # traefik.http.routers.traefik-secure.middlewares: "traefik-ipwhitelist"
      traefik.http.routers.traefik-secure.tls: "true"
      traefik.http.routers.traefik-secure.tls.certresolver: "cloudflare"
      traefik.http.routers.traefik-secure.tls.domains[0].main: "{{ domain }}"
      traefik.http.routers.traefik-secure.tls.domains[0].sans: "*.{{ domain }}"
      traefik.http.routers.traefik-secure.service: "api@internal"
      traefik.http.services.traefik.loadbalancer.server.port: "8084"
    networks:
      - name: proxy
      - name: nextcloud-aio
    ports:
      # HTTPS / SSL port
      - "443:443"
      - "444:444"
      # The Traefik Web UI port (enabled by api:insecure: true in traefik.yml)
      - "8084:8080"
      - "80:80"
      - "82:82"
    pull: yes
    state: 'started'
    env:
    # This token must be built 
    # https://community.cloudflare.com/t/i-need-cf-zone-api-token-for-traefik-setting-but-dont-know-how-create-it/418006/3
      CLOUDFLARE_DNS_API_TOKEN: "{{ cloudflare_token }}"
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: "{{ timezone }}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ config_root }}/traefik_config/traefik.yml:/traefik.yml:ro"
      # If acme.json volume is commented out, the container creates the file in 600 mode
      # It can be copied out of the container and then used by the container on subsequent restarts
      # docker cp traefik:/acme.json ./acme.json 
      # Then uncomment the volume so the external file can successfully be used and not be lost every restart
      - "{{ config_root }}/traefik_config/acme.json:/acme.json"
      - "{{ config_root }}/traefik_config/config.yml:/config.yml:ro"
      - "{{ traefik_dynamic_config_dir }}:/dynamic"
      - "{{ config_root }}/traefik_config/logs:/var/log/traefik"
    restart_policy: unless-stopped

# Jim's Garage example - stopped working randomly?
# https://www.youtube.com/watch?v=XH9XgiVM_z4&t=105s

      # Techno Tim example
      # https://www.youtube.com/watch?v=liV3c9m_OX8
      # updated version:
      # https://www.youtube.com/watch?v=n1vOfdz5Nm8

      # Successfull cloudflare cert generation: https://community.traefik.io/t/cloudflare-failed-to-find-zone-domain/19884/11

      #Command to manually test credentials:
      #
      #CLOUDFLARE_DNS_API_TOKEN=<DNS TOKEN for all zones - see documentation linked above> \
      #lego --email {{ primary_email }} --dns cloudflare --domains {{ domain }} run

      # They seem to change the env vars for the cloudflare envs all the time, here is the provider documentation
      # https://doc.traefik.io/traefik/https/acme/#providers


      # ******STEPS TO UPDATE CERT:
      # 1. comment out "{{ config_root }}/traefik_config/acme.json:/acme.json" above
      # 2. on server: `docker stop traefik`
      # 3. on server: `docker rm traefik`
      # 4. ansible-playbook run.yml --ask-vault-password -i inventory -t traefik
      # 5. on server: `cd /mnt/config/traefik_config`
      # 6. on server: `rm acme.json`
      # 7. on server: `docker cp traefik:/acme.json ./acme.json`
      # 8. on server: `docker stop traefik`
      # 9. on server: `docker rm traefik`
      # 10. uncomment out "{{ config_root }}/traefik_config/acme.json:/acme.json" above
      # 11. ansible-playbook run.yml --ask-vault-password -i inventory -t traefik


# TO log into container:
  # docker exec -it traefik /bin/sh
