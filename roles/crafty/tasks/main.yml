---

- name: Make sure the crafty control is created and running
  docker_container:
    image: registry.gitlab.com/crafty-controller/crafty-4:latest
    # stdin_open: true
    name: "crafty"
    ports:
      - "8001:8000" # HTTP
      - "8444:8443" # HTTPS
      - "8124:8123" # DYNMAP
      - "19132:19132/udp" # BEDROCK
      - "25500-25600:25500-25600" # MC SERV PORT RANGE
    networks:
      - name: proxy
    labels:
      traefik.enable: "true"
      traefik.http.routers.crafty.entrypoints: "https-external"
      traefik.http.routers.crafty.rule: "Host(`crafty.{{ domain }}`)"
      traefik.http.services.crafty.loadbalancer.server.port: "8443" # port that Crafty operates on is 8443
      traefik.http.routers.crafty.tls: "true" # tells traefik you want to use SSL/TLS to connect to your Crafty instance
      traefik.http.routers.crafty.tls.certresolver: cloudflare # OPTIONAL: If you want traefik to handle TLS certificates instead of Crafty, you should uncomment the beginning of this line and put the name of your traefik certificate resolver here
      traefik.http.services.crafty.loadbalancer.server.scheme: "https" # tell traefik to connect to Crafty via https instead of http
      traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto: "https" # enable websockets for Crafty
      # TODO: is this needed?
      # traefik.http.services.crafty.loadbalancer.server.url: "https://192.168.1.36:8443"


      # This syntax allows cloudflare tunnel to host crafty.{{ domain }} which points to local crafty-in.{{ domain }} over https
      # Both crafty.{{ domain }} and crafty-in.{{ domain }} must be configured in local dns (pi-hole)
      # https://www.youtube.com/watch?v=yMmxw-DZ5Ec
      # traefik.http.middlewares.crafty-https-redirect.redirectscheme.scheme: "https"
      # traefik.http.routers.crafty.middlewares: "crafty-https-redirect"
      # traefik.http.routers.crafty-secure.entrypoints: "https"
      # traefik.http.routers.crafty-secure.rule: "Host(`crafty.{{ domain }}`)||Host(`crafty-in.{{ domain }}`)"
      # traefik.http.routers.crafty-secure.service: "crafty"
    pull: yes
    # tty: true
    state: 'started'
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: "{{ timezone }}"
    volumes:
      - "{{ config_root }}/crafty_data/backups:/crafty/backups"
      - "{{ config_root }}/crafty_data/servers:/crafty/servers"
      - "{{ config_root }}/crafty_data/import:/crafty/import"
      - "{{ config_root }}/crafty_config/app/config:/crafty/app/config"
      - "{{ config_root }}/crafty_config/logs:/crafty/logs"
    restart_policy: unless-stopped